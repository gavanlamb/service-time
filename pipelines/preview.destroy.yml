resources:
  repositories:
    - repository: templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: expensely

trigger:
  batch: false
  branches:
    include:
      - main

pr: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: pullRequestNumber
    displayName: Number of the pull request
    type: number
    default: 0

stages:
  - stage: preview
    displayName: Preview
    variables:
      - template: variables/preview.ap-southeast-2.yml@templates
    jobs:
      - job: setup
        displayName: Setup
        steps:
          - checkout: none
          - task: PowerShell@2
            inputs:
              targetType: inline
              script: |
                if(${{parameters.pullRequestNumber}} -gt 0) {
                  write-host("##vso[task.setvariable variable=pullRequestId;isOutput=true]${{parameters.pullRequestNumber}}")
                  write-host("##vso[task.setvariable variable=destroy;isOutput=true]true")
                } else {
                  echo "$(Build.SourceVersionMessage)"
                  $found = "$(Build.SourceVersionMessage)" -match '\(\#([0-9]*)\)'
                  if ($found) {
                    $pullRequestNumber = $matches[1]
                    write-host("Identifier:$pullRequestNumber")
                    write-host("##vso[task.setvariable variable=pullRequestId;isOutput=true]$pullRequestNumber")
                    Try {
                      $url = "https://time$pullRequestNumber.preview.expensely.io/health"
                      write-host("Url: $url")
                      $req = Invoke-WebRequest $url -UseBasicParsing
                      $statusCode = $($req.StatusCode) -as [int]
                      write-host("Status code: $statusCode")
                      if($statusCode -gt 0)
                      {
                        write-host("##vso[task.setvariable variable=destroy;isOutput=true]true")
                      }
                    } Catch {
                      write-host $_.Exception.Message
                      write-host("##vso[task.setvariable variable=destroy;isOutput=true]false")
                    }
                  } else {
                    write-host("##vso[task.setvariable variable=destroy;isOutput=true]false")
                  }
                }
            name: set_variables
            displayName: Set variables

      - deployment: destroy
        displayName: Destroy
        dependsOn:
          - setup
        variables:
          pullRequestId: $[ dependencies.setup.outputs['set_variables.pullRequestId'] ]
          destroy: $[ dependencies.setup.outputs['set_variables.destroy'] ]
        condition: and(succeeded(), eq(variables.destroy, true))
        environment: preview
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: aws/iam/configure.yml@templates
                - template: terraform/destroy.yml@templates 
                  parameters:
                    destroyAdditionalArguments: '-var-file="variables/$(ENVIRONMENT).$(REGION).tfvars" -var="build_identifier=1.0.0" -var="environment=Preview$(pullRequestId)" -var="subdomain=time" -var="npm_build_identifier=1.0.0"'
                    workspaceName: service-time-$(ENVIRONMENT)$(pullRequestId)
