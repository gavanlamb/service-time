parameters:
  - name: applicationName
    displayName: Name of the application
    type: string
    default: Time
  - name: environmentName
    displayName: Name of the application
    type: string
  - name: serviceConnectionName
    displayName: Name of the AWS service connection to use
    type: string
  - name: region
    displayName: Name of the AWS region
    type: string

steps:
  - task: AWSPowerShellModuleScript@1
    name: drop_database
    displayName: Drop database
    inputs:
      awsCredentials: ${{ parameters.serviceConnectionName }}
      regionName: ${{ parameters.region }}
      scriptType: 'inline'
      inlineScript: |
        $instanceId=aws ec2 describe-instances --filters "Name=tag:Name,Values=expensely" --max-items 1 --query 'Reservations[0].Instances[0].InstanceId' 
        $databaseName = "${{ lower(parameters.applicationName) }}_${{ lower(parameters.environmentName) }}"
        $username = "${{ lower(parameters.applicationName) }}_${{ lower(parameters.environmentName) }}"
        $connectionStringParameterStoreName = "/${{ parameters.applicationName }}/${{ parameters.environmentName }}/ConnectionStrings/Default"

        $InstanceId=aws ec2 describe-instances --filters "Name=tag:Name,Values=expensely" --max-items 1 --query 'Reservations[0].Instances[0].InstanceId' 

        $DropDatabaseCommandId = aws ssm send-command --instance-ids "$instanceId" --document-name 'DropDatabase-expensely' --parameters databaseName=$databaseName,username=$username,connectionStringParameterStoreName=$connectionStringParameterStoreName --query 'Command.CommandId'
        aws ssm wait command-executed --instance-id "$InstanceId" --command-id $DropDatabaseCommandId
