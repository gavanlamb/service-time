resources:
  repositories:
    - repository: templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: expensely

trigger: none

pr:
  branches:
    include:
      - 'main'

pool:
  vmImage: ubuntu-latest

variables:
  - template: variables/preview.ap-southeast-2.yml@templates

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: setup
        displayName: Setup
        steps:
          - checkout: none
          - task: PowerShell@2
            displayName: Set build identifier
            inputs:
              targetType: inline
              script: Write-Host "##vso[build.updatebuildnumber]1.0.$(build.buildid).$(System.StageAttempt)"
              errorActionPreference: default
              showWarnings: true
              pwsh: true
      - job: api
        displayName: API
        dependsOn:
          - setup
        steps:
          - template: templates/build.api.yml
          - template: aws/iam/configure.yml@templates
          - template: templates/push.api.yml
      - job: api_tests
        displayName: Publish API Tests
        dependsOn:
          - api
        steps:
          - task: PublishBuildArtifacts@1
            displayName: Publish Time.ApiTests
            inputs:
              PathtoPublish: $(Build.SourcesDirectory)/tests/Time.ApiTests/
              ArtifactName: Time.ApiTests
              publishLocation: Container
      - job: load_tests
        displayName: Publish Load Tests
        dependsOn:
          - api_tests
        steps:
          - task: PublishBuildArtifacts@1
            displayName: Publish Time.LoadTests
            inputs:
              PathtoPublish: $(Build.SourcesDirectory)/tests/Time.LoadTests/
              ArtifactName: Time.LoadTests
              publishLocation: Container

#      - job: load_tests
#        displayName: Load Tests
#        dependsOn:
#          - setup
#        variables:
#          BUILD_NUMBER: $[ dependencies.setup.outputs['setNPMBuildIdentifier.NPMBuildNumber'] ]
#        steps:
#          - template: templates/build.load-tests.yml
#            parameters:
#              buildNumber: $(BUILD_NUMBER)
#          - template: aws/iam/configure.yml@templates
#          - template: templates/push.load-tests.yml
#            parameters:
#              buildNumber: $(BUILD_NUMBER)

  - stage: preview
    displayName: Preview
    dependsOn:
      - build
    jobs:
      - job: plan
        displayName: Plan
        steps:
          - template: aws/iam/configure.yml@templates
          - task: PowerShell@2
            displayName: Create tfvars file
            inputs:
              targetType: inline
              script: |
                $formatText = @'
                environment="Preview$(System.PullRequest.PullRequestNumber)"
                region="${{ variables.AWS_DEFAULT_REGION }}"
                application_name="Time"
                build_identifier="$(Build.BuildNumber)"
                vpc_name="expensely"
                cluster_name="expensely"
                capacity_provider_name="linux"
                cognito_name="expensely-preview"
                codedeploy_role_name="expensely-code-deploy"
                codedeploy_bucket_name="$(CODEDEPLOY_BUCKET_NAME)"
                codedeploy_bucket_policy_name="expensely-code-deploy"
                zone_name="preview.expensely.io"
                subdomain="time$(System.PullRequest.PullRequestNumber)"
                alb_name="expensely"
                api_ecs_task_cpu=512
                api_ecs_task_memory=2042
                api_min_capacity=2
                api_max_capacity=10
                api_desired_count=2
                db_subnet_group_name="expensely"
                rds_delete_protection=false
                rds_database_name="time_api"
                '@ | Out-File -FilePath ${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber).${{ variables.AWS_DEFAULT_REGION }}.tfvars
              errorActionPreference: default
              showWarnings: true
              pwsh: true
              workingDirectory: $(Build.SourcesDirectory)/infrastructure/variables
          - template: terraform/plan.yml@templates
            parameters:
              artifactName: ${{ variables.TF_ARTIFACT_NAME }}
              workspaceName: service-time-${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)
              version: 1.1.4
              planAdditionalCommandOptions: -var-file="variables/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber).${{ variables.AWS_DEFAULT_REGION }}.tfvars"
      - deployment: deploy
        displayName: Deploy
        dependsOn:
          - plan
        environment: preview
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - template: aws/iam/configure.yml@templates
                - task: DownloadPipelineArtifact@2
                  displayName: Download Time.ApiTests
                  inputs:
                    buildType: current
                    artifactName: Time.ApiTests
                    targetPath: $(Build.SourcesDirectory)/Time.ApiTests
                - task: PowerShell@2
                  displayName: Upload Time.ApiTests
                  inputs:
                    targetType: inline
                    script: |
                      aws s3 cp collections/time.postman_collection.json s3://$(CODEDEPLOY_BUCKET_NAME)/time/$(Build.BuildNumber)/api-tests/tests/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)/time.postman_collection.json
                      aws s3 cp environments/${{ variables.ENVIRONMENT }}.postman_environment.json s3://$(CODEDEPLOY_BUCKET_NAME)/time/$(Build.BuildNumber)/api-tests/tests/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)/${{ variables.ENVIRONMENT }}.postman_environment.json
                    errorActionPreference: default
                    showWarnings: true
                    pwsh: true
                    workingDirectory: $(Build.SourcesDirectory)/Time.ApiTests
                - task: DownloadPipelineArtifact@2
                  displayName: Download Time.LoadTests
                  inputs:
                    buildType: current
                    artifactName: Time.LoadTests
                    targetPath: $(Build.SourcesDirectory)/Time.LoadTests
                - task: PowerShell@2
                  displayName: Upload Time.LoadTests
                  inputs:
                    targetType: inline
                    script: |
                      aws s3 cp load.jmx s3://$(CODEDEPLOY_BUCKET_NAME)/time/$(Build.BuildNumber)/load-tests/tests/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)
                      aws s3 cp users.csv s3://$(CODEDEPLOY_BUCKET_NAME)/time/$(Build.BuildNumber)/load-tests/tests/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)
                    errorActionPreference: default
                    showWarnings: true
                    pwsh: true
                    workingDirectory: $(Build.SourcesDirectory)/Time.LoadTests
                    
                    
                    
                - template: terraform/apply.yml@templates
                  parameters:
                    artifactName: ${{ variables.TF_ARTIFACT_NAME }}
                    version: 1.1.4
                - template: aws/codedeploy/deploy.yml@templates
                  parameters:
                    appSpecFileName: $(Build.BuildNumber).yaml
                    destinationPath: time/$(Build.BuildNumber)/codedeploy/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)


                - template: aws/s3/publish-test-results.yml@templates
                  parameters:
                    sourcePath: time/$(Build.BuildNumber)/api/results/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)
                    testResultsFileName: results.xml
                    testRunTitle: API
                - task: PowerShell@2
                  displayName: Download html report
                  condition: succeededOrFailed()
                  inputs:
                    targetType: inline
                    script: aws s3 sync s3://$(TEST_RESULTS_BUCKET_NAME)/time/$(Build.BuildNumber)/load/report/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)/report-genarator-html $(Build.SourcesDirectory)/html-report
                    errorActionPreference: default
                    showWarnings: true
                    pwsh: true
                - task: publishhtmlreport@1
                  displayName: Publish HTMl report
                  condition: succeededOrFailed()
                  inputs:
                    htmlType: Jmeter
                    JmeterReportsPath: $(Build.SourcesDirectory)/html-report/