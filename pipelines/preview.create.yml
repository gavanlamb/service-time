name: 1.0$(Rev:.r)
resources:
  repositories:
    - repository: templates
      type: github
      name: gavanlamb/azure-devops-templates
      endpoint: expensely
  pipelines:
    - pipeline: build
      source: 'Services\Time\Build'
      trigger:
        branches:
          include:
            - refs/remotes/pull*
            - refs/pull*

pool:
  vmImage: ubuntu-latest

trigger: none
pr: none

variables:
  - name: terraformVersion
    value: 1.0.2
    readonly: true

stages:
  - stage: preview
    displayName: Preview
    pool:
      vmImage: 'windows-latest'
    variables:
      - group: 'AWS Sydney Production'
      - name: artifactName
        value: preview_ap-southeast-2
        readonly: true
      - name: environment
        value: preview
        readonly: true
    jobs:
      - job: plan
        displayName: Plan
        steps:
          - task: PowerShell@2
            inputs:
              targetType: inline
              script: |
                write-host("$(resources.pipeline.build.sourceBranch)")
                $branchName = "$(resources.pipeline.build.sourceBranch)"
                $nameElements = $branchName.Split("/")
                $pullRequestId = $nameElements[2]
                write-host("##vso[task.setvariable variable=pullRequestId;isOutput=true]$pullRequestId")
            name: set_variables
            displayName: Set variables
          - template: aws/terraform/plan.yml@templates
            parameters:
              artifactName: $(artifactName)
              planAdditionalCommandOptions: '-var-file=variables/$(environment).$(region).tfvars -var="build_identifier=$(resources.pipeline.build.runName)" -var="environment=Preview$(set_variables.pullRequestId)" -var="subdomain=time$(set_variables.pullRequestId)"'
              serviceConnectionName: $(terraformServiceConnectionName)
              stateBucketName: $(terraformStateBucketName)
              stateLockTableName: $(terraformStateLockTableName)
              workspaceName: service-time-$(environment)$(set_variables.pullRequestId)

      - deployment: apply
        displayName: Apply
        dependsOn: plan
        environment:  preview
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - template: aws/terraform/apply.yml@templates
                  parameters:
                    artifactName: $(artifactName)
                    serviceConnectionName: $(terraformServiceConnectionName)
                - template: templates/aws.codedeploy.yml
                  parameters:
                    serviceConnectionName: $(awsServiceConnectionName)
                    region: $(region)
                    sourcePath: time-$(resources.pipeline.build.runName).yaml
                    destinationPath: time/$(environment)/time-$(resources.pipeline.build.runName).yaml
                    codeDeployBucketName: $(codeDeployBucketName)
