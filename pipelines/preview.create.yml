resources:
  repositories:
    - repository: templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: expensely

trigger: none

pr:
  branches:
    include:
      - 'main'

pool:
  vmImage: ubuntu-latest

variables:
  - template: variables/preview.ap-southeast-2.yml@templates

stages:
#  - stage: build
#    displayName: Build
#    jobs:
#      - job: setup
#        displayName: Setup
#        steps:
#          - checkout: none
#          - template: templates/build.numbers.yml
#      - job: api
#        displayName: Api
#        dependsOn:
#          - setup
#        steps:
#          - template: templates/build.api.yml
#          - template: aws/iam/configure.yml@templates
#          - template: templates/push.api.yml
#      - job: integration_tests
#        displayName: Integration Tests
#        dependsOn:
#          - setup
#        variables:
#          NPM_BUILD_NUMBER: $[ dependencies.setup.outputs['setNPMBuildIdentifier.NPMBuildNumber'] ]
#        steps:
#          - template: templates/build.integration-tests.yml
#            parameters:
#              buildNumber: $(NPM_BUILD_NUMBER)
#          - template: aws/iam/configure.yml@templates
#          - template: templates/push.integration-tests.yml
#            parameters:
#              buildNumber: $(NPM_BUILD_NUMBER)

  - stage: preview
    displayName: Preview
#    dependsOn:
#      - build
    variables:
      - name: NPM_BUILD_NUMBER
        value: $[ stageDependencies.build.setup.outputs['setNPMBuildIdentifier.NPMBuildNumber'] ]
    jobs:
      - job: plan
        displayName: Plan
        steps:
          - template: aws/iam/configure.yml@templates
          - task: PowerShell@2
            displayName: Create tfvars file
            inputs:
              targetType: inline
              script: |
                $formatText = @'
                environment="Preview$(System.PullRequest.PullRequestNumber)"
                region="${{ variables.REGION }}"
                application_name="Time"
                build_identifier="$(Build.BuildNumber)"
                vpc_name="expensely"
                cluster_name="expensely"
                capacity_provider_name="linux"
                cognito_name="expensely-preview"
                codedeploy_role_name="expensely-code-deploy"
                codedeploy_bucket_name="expensely-code-deploy-production"
                zone_name="preview.expensely.io"
                subdomain="time$(System.PullRequest.PullRequestNumber)"
                alb_name="expensely"
                api_ecs_task_cpu=512
                api_ecs_task_memory=2042
                api_min_capacity=2
                api_max_capacity=10
                api_desired_count=2
                npm_build_identifier="$(NPM_BUILD_NUMBER)"
                test_results_bucket="expensely-test-results-production"
                test_results_bucket_policy_name="expensely-test-results"
                db_subnet_group_name="expensely"
                rds_delete_protection=false
                rds_database_name="time_api"
                '@ | Out-File -FilePath ${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber).${{ variables.REGION }}.tfvars
              errorActionPreference: default
              showWarnings: true
              pwsh: true
              workingDirectory: $(Build.SourcesDirectory)/infrastructure/variables
          - template: terraform/plan.yml@templates
            parameters:
              artifactName: ${{ variables.TF_ARTIFACT_NAME }}
              workspaceName: service-time-${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)
              version: 1.1.4
              planAdditionalCommandOptions: -var-file="variables/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber).${{ variables.REGION }}.tfvars"
      - deployment: deploy
        displayName: Deploy
        dependsOn:
          - plan
        environment: preview
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - template: aws/iam/configure.yml@templates
                - template: terraform/apply.yml@templates
                  parameters:
                    artifactName: ${{ variables.TF_ARTIFACT_NAME }}
                    version: 1.1.4
                - template: aws/codedeploy/deploy.yml@templates
                  parameters:
                    appSpecFileName: $(Build.BuildNumber).yaml
                    destinationPath: time/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)
                - template: aws/s3/publish-test-results.yml@templates
                  parameters:
                    sourcePath: time/${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)
                    testResultsFileName: $(NPM_BUILD_NUMBER).xml
                    testRunTitle: Integration
