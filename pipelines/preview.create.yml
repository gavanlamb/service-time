name: 1.0$(Rev:.r)
resources:
  repositories:
    - repository: templates
      type: github
      name: gavanlamb/azure-devops-templates
      endpoint: expensely
    - repository: expensely-templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: expensely
  pipelines:
    - pipeline: build
      source: 'Services\Time\Build'
      trigger:
        branches:
          include:
            - refs/remotes/pull*
            - refs/pull*

pool:
  vmImage: ubuntu-latest

trigger: none
pr: none

variables:
  - name: terraformVersion
    value: 1.0.2
    readonly: true

parameters:
  - name: buildId
    displayName: Build identifier
    type: string
    default: 0

stages:
  - stage: preview
    displayName: Preview
    pool:
      vmImage: 'windows-latest'
    variables:
      - template: variables/preview.ap-southeast-2.yml@expensely-templates
      - name: artifactName
        value: preview_ap-southeast-2
        readonly: true
    jobs:
      - job: setup
        displayName: Setup
        steps:
          - checkout: none
          - task: PowerShell@2
            inputs:
              targetType: inline
              script: |
                write-host("Build.SourceBranch: $(Build.SourceBranch)")
                if("$(Build.Reason)" -eq "ResourceTrigger"){
                  write-host("##vso[task.setvariable variable=buildId;isOutput=true]$(resources.pipeline.build.runName)")
                } else {
                  write-host("##vso[task.setvariable variable=buildId;isOutput=true]${{ parameters.buildId }}")
                }

                write-host("$(Build.SourceBranch)")
                $branchName = "$(Build.SourceBranch)"
                $nameElements = $branchName.Split("/")
                $pullRequestId = $nameElements[2]
                write-host("##vso[task.setvariable variable=pullRequestId;isOutput=true]$pullRequestId")
            name: set_variables
            displayName: Set variables
          - template: templates/environment.create.yml
            parameters:
              environmentName: Preview$(set_variables.pullRequestId)
              serviceConnectionName: ${{variables.awsServiceConnectionName}}
              region: $(region)

      - job: plan
        displayName: Plan
        dependsOn:
          - setup
        variables:
          pullRequestId: $[dependencies.setup.outputs['set_variables.pullRequestId']]
          buildId: $[dependencies.setup.outputs['set_variables.buildId']]
        steps:
          - template: aws/terraform/plan.yml@templates
            parameters:
              artifactName: $(artifactName)
              planAdditionalCommandOptions: '-var-file=variables/${{ variables.environment }}.$(region).tfvars -var="build_identifier=$(buildId)" -var="environment=Preview$(pullRequestId)" -var="subdomain=time$(pullRequestId)"'
              serviceConnectionName: ${{variables.terraformServiceConnectionName}}
              stateBucketName: $(terraformStateBucketName)
              stateLockTableName: $(terraformStateLockTableName)
              workspaceName: service-time-${{ variables.environment }}$(pullRequestId)

      - deployment: apply
        displayName: Apply
        dependsOn:
          - plan
          - setup
        environment: preview
        variables:
          pullRequestId: $[dependencies.setup.outputs['set_variables.pullRequestId']]
          buildId: $[dependencies.setup.outputs['set_variables.buildId']]
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - template: aws/terraform/apply.yml@templates
                  parameters:
                    artifactName: $(artifactName)
                    serviceConnectionName: ${{variables.terraformServiceConnectionName}}
                - template: aws/cli/codedeploy.deploy.yml@templates
                  parameters:
                    serviceConnectionName: ${{variables.awsServiceConnectionName}}
                    region: $(region)
                    sourcePath: time-$(buildId).yaml
                    destinationPath: time/${{ variables.environment }}$(pullRequestId)/time-$(buildId).yaml
                    codeDeployBucketName: $(codeDeployBucketName)
