name: 1.0$(Rev:.r)
resources:
  repositories:
    - repository: templates
      type: github
      name: gavanlamb/azure-devops-templates
      endpoint: expensely
    - repository: expensely-templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: expensely

pool:
  vmImage: ubuntu-latest

trigger:
  batch: true
  branches:
    include:
      - "main"

pr: none

parameters:
  - name: buildId
    displayName: Build identifier
    type: string
    default: $(resources.pipeline.build.runName)

stages:
  - stage: build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: build
        displayName: Build
        steps:
          - template: aws/terraform/plan.yml@templates
            parameters:
              serviceConnectionName: ${{ variables.awsServiceConnectionName }}
              region: ${{ variables.region }}

  - stage: production
    displayName: Production
    pool:
      vmImage: 'windows-latest'
    variables:
      - template: variables/production.ap-southeast-2.yml@expensely-templates
      - name: artifactName
        value: production.ap-southeast-2.terraform
        readonly: true
    jobs:
      - job: plan
        displayName: Plan
        steps:
          - template: aws/terraform/plan.yml@templates
            parameters:
              artifactName: ${{ variables.artifactName }}
              planAdditionalCommandOptions: '-var-file=variables/${{ variables.environment }}.${{ variables.region }}.tfvars -var="build_identifier=${{ parameters.buildId }}"'
              serviceConnectionName: ${{ variables.terraformServiceConnectionName }}
              stateBucketName: ${{ variables.terraformStateBucketName }}
              stateLockTableName: ${{ variables.terraformStateLockTableName }}
              workspaceName: service-time-${{ variables.environment }}

      - template: job/approve.yml@templates
        parameters:
          dependsOn: plan
          timeoutInMinutes: 60
          notifyUsers: '[Expensely]\Expensely Team'

      - deployment: deploy
        displayName: Deploy
        dependsOn: approve
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - template: aws/terraform/apply.yml@templates
                  parameters:
                    artifactName: ${{ variables.artifactName }}
                    serviceConnectionName: ${{ variables.terraformServiceConnectionName }}
                - template: aws/cli/codedeploy.deploy.yml@templates
                  parameters:
                    serviceConnectionName: ${{ variables.awsServiceConnectionName }}
                    region: ${{ variables.region }}
                    sourcePath: time-${{ parameters.buildId }}.yaml
                    destinationPath: time/${{ variables.environment }}/time-${{ parameters.buildId }}.yaml
                    codeDeployBucketName: ${{ variables.codeDeployBucketName }}
