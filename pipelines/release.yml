name: 1.0$(Rev:.r)
resources:
  repositories:
    - repository: templates
      type: github
      name: gavanlamb/azure-devops-templates
      endpoint: expensely
    - repository: expensely-templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: expensely
  pipelines:
    - pipeline: build
      source: 'Services\Time\Build'
      trigger: true

pool:
  vmImage: ubuntu-latest
  
trigger: none
pr: none

stages:
  - stage: output
    displayName: Output
    jobs:
      - job: plan
        displayName: Plan
        steps:
          - script: |
              echo $(resources.pipeline.build.pipelineID)
              echo $(resources.pipeline.build.runName)
              echo $(resources.pipeline.build.runID)
              echo $(resources.pipeline.build.runURI)
              echo $(resources.pipeline.build.sourceBranch)
              echo $(resources.pipeline.build.sourceCommit)
              echo $(resources.pipeline.build.sourceProvider)
              echo $(resources.pipeline.build.requestedFor)
              echo $(resources.pipeline.build.requestedForID)

  - stage: production
    displayName: Production
    dependsOn: output
    variables:
      - template: variables/production.ap-southeast-2.yml@expensely-templates
    jobs:
      - job: plan
        displayName: Plan
        steps:
          - template: aws/terraform/plan.yml@templates
            parameters:
              artifactName: $(artifactName)
              initAdditionalCommandOptions: '-no-color'
              planAdditionalCommandOptions: '-var-file=$(production).$(terraformRegion).tfvars'
              serviceConnectionName: ${{ variables.terraformServiceConnectionName }}
              stateBucketName: ${{ variables.terraformStateBucketName }}
              stateLockTableName: ${{ variables.terraformStateLockTableName }}
              workspaceName: service-time-$(environment)
 
      - template: ./templates/approve.yml
        parameters:
          dependsOn: plan

      - deployment: apply
        displayName: Apply
        dependsOn: approve
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - template: aws/terraform/apply.yml@templates
                  parameters:
                    applyAdditionalCommandOptions: '-no-color'
                    artifactName: $(artifactName)
                    serviceConnectionName: ${{ variables.terraformServiceConnectionName }}
