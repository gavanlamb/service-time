name: 1.0$(Rev:.r)
resources:
  repositories:
    - repository: templates
      type: github
      name: gavanlamb/azure-devops-templates
      endpoint: expensely
    - repository: expensely-templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: expensely
  pipelines:
    - pipeline: build
      source: 'Services\Time\Build'
      trigger:
        branches:
          include:
            - main

pool:
  vmImage: ubuntu-latest
  
trigger: none
pr: none

parameters:
  - name: buildId
    displayName: Build identifier
    type: string
    default: $(resources.pipeline.build.runName)

stages:
  - stage: production
    displayName: Production
    pool:
      vmImage: 'windows-latest'
    variables:
      - template: variables/production.ap-southeast-2.yml@expensely-templates
      - name: artifactName
        value: production_ap-southeast-2
        readonly: true
      - name: environment
        value: production
        readonly: true
    jobs:
      - job: plan
        displayName: Plan
        steps:
          - template: aws/terraform/plan.yml@templates
            parameters:
              artifactName: $(artifactName)
              planAdditionalCommandOptions: '-var-file=variables/$(environment).$(region).tfvars -var="build_identifier=${{ parameters.buildId }}"'
              serviceConnectionName: ${{variables.terraformServiceConnectionName}}
              stateBucketName: $(terraformStateBucketName)
              stateLockTableName: $(terraformStateLockTableName)
              workspaceName: service-time-$(environment)
 
      - template: job/approve.yml@templates
        parameters:
          dependsOn: plan
          timeoutInMinutes: 60
          notifyUsers: '[Expensely]\Expensely Team'

      - deployment: apply
        displayName: Apply
        dependsOn: approve
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - template: aws/terraform/apply.yml@templates
                  parameters:
                    artifactName: $(artifactName)
                    serviceConnectionName: ${{variables.terraformServiceConnectionName}}
                - template: aws/cli/codedeploy.deploy.yml@templates
                  parameters:
                    serviceConnectionName: ${{variables.awsServiceConnectionName}}
                    region: $(region)
                    sourcePath: time-${{ parameters.buildId }}.yaml
                    destinationPath: time/$(environment)/time-${{ parameters.buildId }}.yaml
                    codeDeployBucketName: $(codeDeployBucketName)
